///************************************************
/// Generated by: haihd
/// Date: 26/10/2015 02:47:53
/// Goal: Create User Service Class for GD_THANG_DA_GIAM_TRU
///************************************************
/// <summary>
/// Create User Service Class for GD_THANG_DA_GIAM_TRU
/// </summary>

using System;
using BKI_DichVuMatDat.DS;
using IP.Core.IPCommon;
using IP.Core.IPUserService;
using System.Data.SqlClient;
using System.Data;



namespace BKI_DichVuMatDat.US
{

    public class US_GD_THANG_DA_GIAM_TRU : US_Object
    {
        private const string c_TableName = "GD_THANG_DA_GIAM_TRU";
        #region "Public Properties"
        public decimal dcID
        {
            get
            {
                return CNull.RowNVLDecimal(pm_objDR, "ID", IPConstants.c_DefaultDecimal);
            }
            set
            {
                pm_objDR["ID"] = value;
            }
        }

        public bool IsIDNull()
        {
            return pm_objDR.IsNull("ID");
        }

        public void SetIDNull()
        {
            pm_objDR["ID"] = System.Convert.DBNull;
        }

        public string strTHANG
        {
            get
            {
                return CNull.RowNVLString(pm_objDR, "THANG", IPConstants.c_DefaultString);
            }
            set
            {
                pm_objDR["THANG"] = value;
            }
        }

        public bool IsTHANGNull()
        {
            return pm_objDR.IsNull("THANG");
        }

        public void SetTHANGNull()
        {
            pm_objDR["THANG"] = System.Convert.DBNull;
        }

        public string strNAM
        {
            get
            {
                return CNull.RowNVLString(pm_objDR, "NAM", IPConstants.c_DefaultString);
            }
            set
            {
                pm_objDR["NAM"] = value;
            }
        }

        public bool IsNAMNull()
        {
            return pm_objDR.IsNull("NAM");
        }

        public void SetNAMNull()
        {
            pm_objDR["NAM"] = System.Convert.DBNull;
        }

        public string strGIAM_TRU_YN
        {
            get
            {
                return CNull.RowNVLString(pm_objDR, "GIAM_TRU_YN", IPConstants.c_DefaultString);
            }
            set
            {
                pm_objDR["GIAM_TRU_YN"] = value;
            }
        }

        public bool IsGIAM_TRU_YNNull()
        {
            return pm_objDR.IsNull("GIAM_TRU_YN");
        }

        public void SetGIAM_TRU_YNNull()
        {
            pm_objDR["GIAM_TRU_YN"] = System.Convert.DBNull;
        }

        public DateTime datNGAY_LAP
        {
            get
            {
                return CNull.RowNVLDate(pm_objDR, "NGAY_LAP", IPConstants.c_DefaultDate);
            }
            set
            {
                pm_objDR["NGAY_LAP"] = value;
            }
        }

        public bool IsNGAY_LAPNull()
        {
            return pm_objDR.IsNull("NGAY_LAP");
        }

        public void SetNGAY_LAPNull()
        {
            pm_objDR["NGAY_LAP"] = System.Convert.DBNull;
        }

        public string strNGUOI_LAP
        {
            get
            {
                return CNull.RowNVLString(pm_objDR, "NGUOI_LAP", IPConstants.c_DefaultString);
            }
            set
            {
                pm_objDR["NGUOI_LAP"] = value;
            }
        }

        public bool IsNGUOI_LAPNull()
        {
            return pm_objDR.IsNull("NGUOI_LAP");
        }

        public void SetNGUOI_LAPNull()
        {
            pm_objDR["NGUOI_LAP"] = System.Convert.DBNull;
        }

        public string strDA_XOA
        {
            get
            {
                return CNull.RowNVLString(pm_objDR, "DA_XOA", IPConstants.c_DefaultString);
            }
            set
            {
                pm_objDR["DA_XOA"] = value;
            }
        }

        public bool IsDA_XOANull()
        {
            return pm_objDR.IsNull("DA_XOA");
        }

        public void SetDA_XOANull()
        {
            pm_objDR["DA_XOA"] = System.Convert.DBNull;
        }

        #endregion
        #region "Init Functions"
        public US_GD_THANG_DA_GIAM_TRU()
        {
            pm_objDS = new DS_GD_THANG_DA_GIAM_TRU();
            pm_strTableName = c_TableName;
            pm_objDR = pm_objDS.Tables[pm_strTableName].NewRow();
        }

        public US_GD_THANG_DA_GIAM_TRU(DataRow i_objDR)
            : this()
        {
            this.DataRow2Me(i_objDR);
        }

        public US_GD_THANG_DA_GIAM_TRU(decimal i_dbID)
        {
            pm_objDS = new DS_GD_THANG_DA_GIAM_TRU();
            pm_strTableName = c_TableName;
            IMakeSelectCmd v_objMkCmd = new CMakeAndSelectCmd(pm_objDS, c_TableName);
            v_objMkCmd.AddCondition("ID", i_dbID, eKieuDuLieu.KieuNumber, eKieuSoSanh.Bang);
            SqlCommand v_cmdSQL;
            v_cmdSQL = v_objMkCmd.getSelectCmd();
            this.FillDatasetByCommand(pm_objDS, v_cmdSQL);
            pm_objDR = getRowClone(pm_objDS.Tables[pm_strTableName].Rows[0]);
        }
        #endregion


        public void kiem_tra_thang_da_giam_tru_chua(decimal ip_dc_thang, decimal ip_dc_nam, ref decimal op_dc_thang_da_giam_tru)
        {
            CStoredProc v_obj = new CStoredProc("pr_CHECK_DA_GIAM_TRU_THANG_DO_YN");

            v_obj.addDecimalInputParam("@ip_dc_thang", ip_dc_thang);
            v_obj.addDecimalInputParam("@ip_dc_nam", ip_dc_nam);

            SqlParameter v_dc_thang_da_giam_tru = v_obj.addDecimalOutputParam("@op_dc_thang_da_giam_tru", 0);
            v_obj.ExecuteCommand(this);
            op_dc_thang_da_giam_tru = CIPConvert.ToDecimal(v_dc_thang_da_giam_tru.Value);
        }
    }
}
